<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_seagull_00</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize seagull
//Speed = 9001, etc
BASE_SPEED = 5;

forward_speed = BASE_SPEED;
swooping = false;
drop = false;
hover_mode = false;
fly_mode = true;

item_held = false;

// Sam A - Growing Varibles;
experience = 0
next_level_exp = 10
level = 1
size = 1

evolving = false;
evo_dir = 0.0;
evo_hzoom = 0;
evo_vzoom = 0;
evo_alpha = 0.0;

dir = 0.0
var pdist = 0;

held_item = noone;

//
state = scr_seagull_move_state

//Greg's code for scaling swoop
scaleCounter = 0;
initialScaleX = obj_seagull.image_xscale;
initialScaleY = obj_seagull.image_yscale;

//variables for score
score = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Hi
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Alarm for Swooping
drop = false;
swooping = false;
forward_speed = BASE_SPEED;
obj_seagull.state = scr_seagull_move_state;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Seagull Movement
script_execute(self.state);

//image_angle = point_direction(x, y, mouse_x, mouse_y);

//if (fly_mode)
//{
//
//    move_towards_point(mouse_x,mouse_y,forward_speed);
//    //Move forward
//}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug
	show_debug_message("obj_seagull.item_held = " + string(item_held));
            <string>/// pickup_Update
// Move with the seagull.
if (pickedUp == true)
{
    image_angle = obj_seagull.dir;
    x = obj_seagull.x;
    y = obj_seagull.y;
    image_xscale = obj_seagull.image_xscale * 2;
    image_yscale = obj_seagull.image_yscale * 2;
}

// If the segul is dropping then set picked up bool false.
if (obj_seagull.drop == true)
{
    falling = true;
    pickedUp = false;
    obj_seagull.drop = false
}

if (falling == true)
{
    scaleVal = ((-1 / 10) * fallCounter) + 2;
    image_xscale = initialScaleX * scaleVal;
    image_yscale = initialScaleY * scaleVal;
    fallCounter++;
    if (fallCounter &gt;= 10)
    {
        fallCounter = 0;
        falling = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(obj_seagull.hover_mode)
{
    obj_seagull.hover_mode = false;
}
else
{
    obj_seagull.hover_mode = true;
}

show_debug_message(forward_speed);
            <string>/// obj_pickup Init
eatable = true;
weight = 2;
pickedUp = false;
dropped = false;

//some new code to time the fall
fallCounter = 0;
falling = false;
scaleVal = 0;
initialScaleX = image_xscale;
initialScaleY = image_yscale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set the shader If evolving

if (obj_seagull.evolving == true)
{
    if( (alarm[1] % 2) == 1)
    {
    
    shader_set(Evolution_Shader);
    draw_self();
    shader_reset();
    }
    else
    {
    
    draw_self();
    }
}
else
{
    draw_self();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
